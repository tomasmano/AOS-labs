
/*
 * 
 */

package simplefileserver.server;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.3.1
 * Sun Oct 28 17:59:54 CET 2012
 * Generated source version: 2.3.1
 * 
 */


@WebServiceClient(name = "fileServerServices", 
                  wsdlLocation = "file:/home/tomy/NetBeansProjects/AOS-labs/lab06/lab06simplefileserver/src/main/resources/simple-file-server.xml",
                  targetNamespace = "http://j2ee.netbeans.org/wsdl/lab06simplefileserver/java/simple-file-server") 
public class FileServerServices extends Service {

    public final static URL WSDL_LOCATION;
    public final static QName SERVICE = new QName("http://j2ee.netbeans.org/wsdl/lab06simplefileserver/java/simple-file-server", "fileServerServices");
    public final static QName FileServerServicesPort = new QName("http://j2ee.netbeans.org/wsdl/lab06simplefileserver/java/simple-file-server", "fileServerServicesPort");
    static {
        URL url = null;
        try {
            url = new URL("file:/home/tomy/NetBeansProjects/AOS-labs/lab06/lab06simplefileserver/src/main/resources/simple-file-server.xml");
        } catch (MalformedURLException e) {
            System.err.println("Can not initialize the default wsdl from file:/home/tomy/NetBeansProjects/AOS-labs/lab06/lab06simplefileserver/src/main/resources/simple-file-server.xml");
            // e.printStackTrace();
        }
        WSDL_LOCATION = url;
    }

    public FileServerServices(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public FileServerServices(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public FileServerServices() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    public FileServerServices(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }
    public FileServerServices(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public FileServerServices(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns SimpleFileServer
     */
    @WebEndpoint(name = "fileServerServicesPort")
    public SimpleFileServer getFileServerServicesPort() {
        return super.getPort(FileServerServicesPort, SimpleFileServer.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SimpleFileServer
     */
    @WebEndpoint(name = "fileServerServicesPort")
    public SimpleFileServer getFileServerServicesPort(WebServiceFeature... features) {
        return super.getPort(FileServerServicesPort, SimpleFileServer.class, features);
    }

}
