package simplefileserver.client;

/**
 * Please modify this class to meet your needs This class is not complete
 */
import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.Map;
import javax.xml.namespace.QName;
import javax.xml.ws.BindingProvider;
import org.apache.cxf.frontend.ClientProxy;
import org.apache.cxf.ws.security.SecurityConstants;
import org.apache.cxf.ws.security.wss4j.WSS4JOutInterceptor;
import org.apache.ws.security.handler.WSHandlerConstants;

/**
 * This class was generated by Apache CXF 2.3.1 Thu Nov 08 10:45:07 CET 2012
 * Generated source version: 2.3.1
 *
 */
public final class ConcatService_ConcatServiceImplPort_Client {

    private static final QName SERVICE_NAME = new QName("http://server.concatsecuritydemo/", "ConcatServiceImplService");

    private ConcatService_ConcatServiceImplPort_Client() {
    }

    public static void main(String args[]) throws Exception {
        URL wsdlURL = ConcatServiceImplService.WSDL_LOCATION;
        if (args.length > 0) {
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }

        ConcatServiceImplService ss = new ConcatServiceImplService(wsdlURL, SERVICE_NAME);
        ConcatService port = ss.getConcatServiceImplPort();


        org.apache.cxf.endpoint.Client client = ClientProxy.getClient(port);
        org.apache.cxf.endpoint.Endpoint cxfEndpoint = client.getEndpoint();

        // request posielame najprv na TCP monitor, ktory nacuva
        // na danej adrese a presmerovava requesty na server
        
        BindingProvider bp = (BindingProvider) port;
        Map<String, Object> context = bp.getRequestContext();
        context.put(BindingProvider.ENDPOINT_ADDRESS_PROPERTY, "http://localhost:8082");
        context.put(WSHandlerConstants.ACTION, "Signature");
//        context.put(WSHandlerConstants.ACTION, WSHandlerConstants.ENCRYPT);      // FIXME
        context.put(WSHandlerConstants.USER, "c1");
        context.put(WSHandlerConstants.PW_CALLBACK_CLASS, PassCallbackHandler.class.getName());
        context.put(WSHandlerConstants.SIG_PROP_FILE, "crypto.properties");

        context.put(SecurityConstants.SIGNATURE_PROPERTIES, "crypto.properties");
        context.put(SecurityConstants.ENCRYPT_PROPERTIES, "crypto.properties");

        context.put(SecurityConstants.SIGNATURE_USERNAME, "c1");
        context.put(SecurityConstants.ENCRYPT_USERNAME, "c1");
        context.put(SecurityConstants.CALLBACK_HANDLER, new PassCallbackHandler());

        WSS4JOutInterceptor wssOut = new WSS4JOutInterceptor(context);
        cxfEndpoint.getOutInterceptors().add(wssOut);

        {
            System.out.println("Invoking concatOperation...");
            simplefileserver.client.Concat _concatOperation_parameters = new Concat("tomas", "mano");
            simplefileserver.client.ConcatResponse _concatOperation__return = port.concatOperation(_concatOperation_parameters);
            System.out.println("concatOperation.result=" + _concatOperation__return);


        }

        System.exit(0);
    }
}
