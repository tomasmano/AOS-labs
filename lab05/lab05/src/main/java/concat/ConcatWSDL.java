
/*
 * 
 */

package concat;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.3.1
 * Thu Oct 18 09:57:30 CEST 2012
 * Generated source version: 2.3.1
 * 
 */


@WebServiceClient(name = "ConcatWSDL", 
                  wsdlLocation = "file:/home/tomy/NetBeansProjects/AOS-labs/lab05/src/main/resources/concatenation.xml",
                  targetNamespace = "http://www.example.org/NewWSDLFile/") 
public class ConcatWSDL extends Service {

    public final static URL WSDL_LOCATION;
    public final static QName SERVICE = new QName("http://www.example.org/NewWSDLFile/", "ConcatWSDL");
    public final static QName ConcatSOAP = new QName("http://www.example.org/NewWSDLFile/", "ConcatSOAP");
    static {
        URL url = null;
        try {
            url = new URL("file:/home/tomy/NetBeansProjects/AOS-labs/lab05/src/main/resources/concatenation.xml");
        } catch (MalformedURLException e) {
            System.err.println("Can not initialize the default wsdl from file:/home/tomy/NetBeansProjects/AOS-labs/lab05/src/main/resources/concatenation.xml");
            // e.printStackTrace();
        }
        WSDL_LOCATION = url;
    }

    public ConcatWSDL(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public ConcatWSDL(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ConcatWSDL() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    public ConcatWSDL(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }
    public ConcatWSDL(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public ConcatWSDL(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns ConcatService
     */
    @WebEndpoint(name = "ConcatSOAP")
    public ConcatService getConcatSOAP() {
        return super.getPort(ConcatSOAP, ConcatService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ConcatService
     */
    @WebEndpoint(name = "ConcatSOAP")
    public ConcatService getConcatSOAP(WebServiceFeature... features) {
        return super.getPort(ConcatSOAP, ConcatService.class, features);
    }

}
